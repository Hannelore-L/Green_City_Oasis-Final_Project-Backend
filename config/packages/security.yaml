security:
      # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

      # bcrypt is the algorithm used to encrypt the passwords
      encoders:
            App\Entity\User:
                  algorithm: bcrypt
      # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
      providers:
            # used to reload user from session & other features (e.g. switch_user)
            app_user_provider:

                  # users will log in with using their email
                  entity:
                        class: App\Entity\User
                        property: email

      firewalls:

            dev:
                  pattern: ^/(_(profiler|wdt)|css|images|js)/
                  security: false

            admin:
                  pattern: ^/gco_admin
                  stateless: false
                  anonymous: true
                  form_login:
                        login_path: /gco_admin/login
                        check_path: /gco_admin/login
                        csrf_token_generator: security.csrf.token_manager
                  guard:
                        authenticators:
                              - App\Security\LoginFormAuthenticator
                        entry_point: App\Security\LoginFormAuthenticator
                  logout:
                        path: app_logout

            user:
                  pattern:  ^/api/login
                  stateless: true
                  anonymous: true
#                  provider: app_user_provider
                  json_login:
                        check_path: /api/login
                        username_path: email
                        password_path: password
                        success_handler:          lexik_jwt_authentication.handler.authentication_success
                        failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                  guard:
                        authenticators:
                              - lexik_jwt_authentication.jwt_token_authenticator

#            login:
#                  pattern:  ^/api/login_check
#                  stateless: true
#                  anonymous: true
#                  json_login:
#                        check_path:               /api/login_check
#                        success_handler:          lexik_jwt_authentication.handler.authentication_success
#                        failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#                  guard:
#                      authenticators:
#                          - App\Security\CustomAuthAuthenticator
#                  logout:
#                      path: app_logout
#                      # where to redirect after logout
#                      # target: app_any_route
#
#            api:
#                  pattern: ^/api/
#                  stateless: true
#                  anonymous: true
#                  provider: app_user_provider
#                  guard:
#                        authenticators:
#                              - lexik_jwt_authentication.jwt_token_authenticator
#
#            dev:
#                  pattern: ^/(_(profiler|wdt)|css|images|js)/
#                  security: false
#
#            main:
#                  stateless: true
#                  anonymous: true
#                  provider: app_user_provider
#                  json_login:
#                        check_path: /authentication_token
#                        username_path: email
#                        password_path: password
#                        success_handler:          lexik_jwt_authentication.handler.authentication_success
#                        failure_handler:          lexik_jwt_authentication.handler.authentication_failure
#                  guard:
#                        authenticators:
#                              - lexik_jwt_authentication.jwt_token_authenticator

      access_control:
             - { path: ^/gco_admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#             - { path: ^/gco_admin, roles: IS_AUTHENTICATED_ANONYMOUSLY }
             - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
             - { path: ^/gco_admin, roles: ROLE_ADMIN }



               # - { path: ^/profile, roles: ROLE_USER }
#            - { path: ^/admin, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#             - { path: ^/authentication_token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#             - { path: ^/api/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#             - { path: ^/admin, roles: ROLE_ADMIN }


